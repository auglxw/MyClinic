[{"/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/index.js":"1","/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/reportWebVitals.js":"2","/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/App.js":"3","/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/components/Header.jsx":"4","/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/components/Timeline.jsx":"5","/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/pages/Landing.jsx":"6","/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/pages/Details.jsx":"7","/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/pages/Timing.jsx":"8","/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/reducers.js":"9","/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/actions.js":"10","/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/pages/UserType.jsx":"11","/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/components/UserOption.jsx":"12"},{"size":534,"mtime":1657296994678,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1656218087600,"results":"15","hashOfConfig":"14"},{"size":872,"mtime":1659079466711,"results":"16","hashOfConfig":"14"},{"size":314,"mtime":1656867295052,"results":"17","hashOfConfig":"14"},{"size":1093,"mtime":1658739298804,"results":"18","hashOfConfig":"14"},{"size":1617,"mtime":1659079526200,"results":"19","hashOfConfig":"14"},{"size":3900,"mtime":1657291541336,"results":"20","hashOfConfig":"14"},{"size":2657,"mtime":1657204999414,"results":"21","hashOfConfig":"14"},{"size":259,"mtime":1657291528826,"results":"22","hashOfConfig":"14"},{"size":138,"mtime":1657291529694,"results":"23","hashOfConfig":"14"},{"size":472,"mtime":1659079929488,"results":"24","hashOfConfig":"14"},{"size":994,"mtime":1659079905564,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"11ocs12",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"29"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/index.js",[],[],[],"/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/reportWebVitals.js",[],[],"/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/App.js",[],[],"/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/components/Header.jsx",[],[],"/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/components/Timeline.jsx",[],[],"/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/pages/Landing.jsx",[],[],"/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/pages/Details.jsx",["66","67","68","69","70"],[],"import \"../App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from \"react\";\nimport Header from \"../components/Header\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport updateDetails from \"../actions.js\";\n\nfunction Details() {\n    /* const blogs = useSelector((state) => state.blog); */\n    const dispatch = useDispatch();\n    const [name, setName] = useState(\"\");\n    const [nric, setNRIC] = useState(\"\");\n    const [contact, setContact] = useState(\"\");\n    const [dob, setDOB] = useState(\"\");\n    const [condition, setCondition] = useState(\"\");\n    const [visited, setVisited] = useState(\"\");\n    const [formComplete, checkCompleted] = useState(false);\n    \n    const handleChange = (event, infotype) => {\n        event.preventDefault();\n        switch(infotype) {\n            case 'name':\n                setName(event.target.value);\n                break;\n            case 'nric':\n                setNRIC(event.target.value);\n                break;\n            case 'contact':\n                setContact(event.target.value);\n                break;\n            case 'dob':\n                setDOB(event.target.value);\n                break;\n            case 'condition':\n                setCondition(event.target.value);\n                break;\n            case 'visited':\n                var newVisited = visited == event.target.value ? \"\" : event.target.value;\n                setVisited(newVisited);\n                break;\n            default:\n                break;\n        }\n\n        return;\n    }\n\n    const handleSubmit = () => {\n        const fields = [name, nric, contact, dob, condition, visited];\n        for (let i = 0; i < fields.length; i++) {\n            if (fields[i] == \"\") {\n                return checkCompleted(false);\n            }\n        }\n        dispatch(updateDetails({\n            name: name,\n            nric: nric,\n            contact: contact,\n            dateOfBirth: dob,\n            condition: condition,\n            visited: visited\n        }));\n        return checkCompleted(true);\n    }\n\n    return <div className=\"registration\">\n        <Header />\n        <div className=\"registrationContent\">\n            <div className=\"bookingCard\">\n                <p className=\"bookingHeading\">Patient Details</p>\n                <form className=\"registrationForm\" action={formComplete ? \"/timing\" : \"/details\"} method=\"post\" >\n                    <input type=\"text\" name=\"name\" placeholder=\"Name\" onChange={(e) => handleChange(e, \"name\")} />\n                    <input type=\"text\" name=\"nric\" placeholder=\"NRIC\" onChange={(e) => handleChange(e, \"nric\")} />\n                    <div className=\"registrationDOB\">\n                        <span>Date Of Birth:</span>\n                        <input type=\"date\" name=\"dob\" onChange={(e) => handleChange(e, \"dob\")}/>\n                    </div>\n                    <input type=\"text\" name=\"contactnumber\" placeholder=\"Contact Number\" onChange={(e) => handleChange(e, \"contact\")} />\n                    <input type=\"text\" name=\"condition\" placeholder=\"Brief Description of Condition\" onChange={(e) => handleChange(e, \"condition\")} />\n                    <div className=\"visitedPatient\">\n                        <p>Have you visited us before?</p>\n                        <button className={visited==\"true\" ? \"pillButton selected\" : \"pillButton\"} value=\"true\" onClick={(e)=>handleChange(e, \"visited\")}>Yes</button>\n                        <button className={visited==\"false\" ? \"pillButton selected\" : \"pillButton\"} value=\"false\" onClick={(e)=>handleChange(e, \"visited\")}>No</button>\n                    </div>\n                    <div className=\"bookingNext\">\n                        <button className=\"pillButton\" onClick={handleSubmit}>Next{formComplete}</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n}\n\nexport default Details;","/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/pages/Timing.jsx",["71","72","73","74","75"],[],"import \"../App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from \"react\";\nimport Header from \"../components/Header\";\n\nfunction Timing() {\n    const [state, setState] = useState({time: \"0\", formComplete: 0});\n    const morningTimeslots = [\"09:00\", \"09:15\", \"09:30\", \"09:45\", \"10:00\", \"10:15\", \"10:30\", \"10:45\", \"11:00\", \"11:15\", \"11:30\", \"11:45\"];\n    const afternoonTimeslots = [\"14:00\", \"14:15\", \"14:30\", \"14:45\", \"15:00\", \"15:15\", \"15:30\", \"15:45\", \"16:00\", \"16:15\", \"16:30\", \"16:45\"];\n    const eveningTimeslots = [\"19:00\", \"19:15\", \"19:30\", \"19:45\", \"20:00\", \"20:15\", \"20:30\", \"20:45\"];\n\n    function handleClick(event, timeChosen) {\n        event.preventDefault();\n        timeChosen = timeChosen == state.time ? \"0\" : timeChosen;\n        var complete = timeChosen == \"0\" ? 0 : 1;\n        return setState({time: timeChosen, formComplete: complete});\n    }\n\n    return <div className=\"timeslot\">\n        <Header />\n        <div className=\"timeslotContent\">\n            <div className=\"bookingCard\">\n                <p className=\"bookingHeading\">Available Time Slots</p>\n                <div className=\"timeslotPeriod\">\n                    <p>Morning</p>\n                    <div className=\"timeslotButtons\">\n                        {morningTimeslots.map(function(timing, id) { return <button className={state.time == timing ? \"pillButton selected\" : \"pillButton\"} key = {id} onClick={(e)=>handleClick(e, timing)}>{timing}</button>})}\n                    </div>\n                </div>\n                <hr />\n                <div className=\"timeslotPeriod\">\n                    <p>Afternoon</p>\n                    <div className=\"timeslotButtons\">\n                        {afternoonTimeslots.map(function(timing, id) { return <button className={state.time == timing ? \"pillButton selected\" : \"pillButton\"} key = {id} onClick={(e)=>handleClick(e, timing)}>{timing}</button>})}\n                    </div>\n                </div>\n                <hr />\n                <div className=\"timeslotPeriod\">\n                    <p>Evening</p>\n                    <div className=\"timeslotButtons\">\n                        {eveningTimeslots.map(function(timing, id) { return <button className={state.time == timing ? \"pillButton selected\" : \"pillButton\"} key = {id} onClick={(e)=>handleClick(e, timing)}>{timing}</button>})}\n                    </div>\n                </div>\n                <div className=\"bookingNext\">\n                        <button className=\"pillButton\" onClick={() => console.log(state.formComplete)}>Next</button>\n                </div>\n            </div>\n        </div>\n    </div>\n}\n\nexport default Timing;","/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/reducers.js",["76","77"],[],"import { combineReducers } from \"redux\";\n\nconst startState = [];\nconst detailsFormReducer = (state = startState, action) => {\n    if (action.type == \"details\") {\n        return [...state, {patient: action.payload}];\n    }\n}\n\nexport default detailsFormReducer;","/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/actions.js",[],[],"/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/pages/UserType.jsx",[],[],"/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/components/UserOption.jsx",["78","79"],[],{"ruleId":"80","severity":1,"message":"81","line":5,"column":23,"nodeType":"82","messageId":"83","endLine":5,"endColumn":34},{"ruleId":"84","severity":1,"message":"85","line":38,"column":42,"nodeType":"86","messageId":"87","endLine":38,"endColumn":44},{"ruleId":"84","severity":1,"message":"85","line":51,"column":27,"nodeType":"86","messageId":"87","endLine":51,"endColumn":29},{"ruleId":"84","severity":1,"message":"85","line":82,"column":51,"nodeType":"86","messageId":"87","endLine":82,"endColumn":53},{"ruleId":"84","severity":1,"message":"85","line":83,"column":51,"nodeType":"86","messageId":"87","endLine":83,"endColumn":53},{"ruleId":"84","severity":1,"message":"85","line":14,"column":33,"nodeType":"86","messageId":"87","endLine":14,"endColumn":35},{"ruleId":"84","severity":1,"message":"85","line":15,"column":35,"nodeType":"86","messageId":"87","endLine":15,"endColumn":37},{"ruleId":"84","severity":1,"message":"85","line":27,"column":107,"nodeType":"86","messageId":"87","endLine":27,"endColumn":109},{"ruleId":"84","severity":1,"message":"85","line":34,"column":109,"nodeType":"86","messageId":"87","endLine":34,"endColumn":111},{"ruleId":"84","severity":1,"message":"85","line":41,"column":107,"nodeType":"86","messageId":"87","endLine":41,"endColumn":109},{"ruleId":"80","severity":1,"message":"88","line":1,"column":10,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"85","line":5,"column":21,"nodeType":"86","messageId":"87","endLine":5,"endColumn":23},{"ruleId":"89","severity":1,"message":"90","line":12,"column":21,"nodeType":"91","endLine":12,"endColumn":93},{"ruleId":"89","severity":1,"message":"90","line":20,"column":21,"nodeType":"91","endLine":20,"endColumn":93},"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'combineReducers' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]