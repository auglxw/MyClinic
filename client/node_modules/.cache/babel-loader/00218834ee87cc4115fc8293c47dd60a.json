{"ast":null,"code":"import { combineReducers } from \"redux\";\nconst startState = [];\n\nconst detailsFormReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : startState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action.type);\n\n  if (action.type != 'details') {\n    return [...state, {\n      patient: action.payload\n    }];\n  }\n\n  return state;\n};\n\nconst combinedReducer = combineReducers({\n  details: detailsFormReducer\n});\nexport default combinedReducer;","map":{"version":3,"names":["combineReducers","startState","detailsFormReducer","state","action","console","log","type","patient","payload","combinedReducer","details"],"sources":["/Users/augustinelee/Desktop/NTU/MyClinic/myclinic/client/src/reducers.js"],"sourcesContent":["import { combineReducers } from \"redux\";\n\nconst startState = [];\nconst detailsFormReducer = (state = startState, action) => {\n    console.log(action.type);\n    if (action.type != 'details') {\n        return [...state, {patient: action.payload}];\n    }\n    return state;\n}\n\nconst combinedReducer = combineReducers({\n    details: detailsFormReducer\n})\n\nexport default combinedReducer;"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,MAAMC,UAAU,GAAG,EAAnB;;AACA,MAAMC,kBAAkB,GAAG,YAAgC;EAAA,IAA/BC,KAA+B,uEAAvBF,UAAuB;EAAA,IAAXG,MAAW;EACvDC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;;EACA,IAAIH,MAAM,CAACG,IAAP,IAAe,SAAnB,EAA8B;IAC1B,OAAO,CAAC,GAAGJ,KAAJ,EAAW;MAACK,OAAO,EAAEJ,MAAM,CAACK;IAAjB,CAAX,CAAP;EACH;;EACD,OAAON,KAAP;AACH,CAND;;AAQA,MAAMO,eAAe,GAAGV,eAAe,CAAC;EACpCW,OAAO,EAAET;AAD2B,CAAD,CAAvC;AAIA,eAAeQ,eAAf"},"metadata":{},"sourceType":"module"}